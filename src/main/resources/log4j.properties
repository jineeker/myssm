# For JBoss: Avoid to setup Log4J outside $JBOSS_HOME/server/default/deploy/log4j.xml!
# For all other servers: Comment out the Log4J listener in web.xml to activate Log4J.

#【log4j.rootLogger】
#1、log4j.rootLogger = level  , appenderName, appenderName, …
    #level是定义的输出级别，低于该级别的将不会输出，
    #主要级别有 OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL 或自定义级别，
    #其中OFF设定的话将不输出任何信息，ALL设定的话将输出所有信息；
    #如果你的level设定为INFO，那么不能输出DEBUG信息；

    #appenderName是指定日志信息输出到哪个地方，控制台，文件等等，可同时指定多个输出目的地。

log4j.rootLogger=DEBUG, stdout, logfile

#log4j.appender【这个是必须配置的】
#2、log4j.appender.appenderName指定输出appender，Log4J提供了一下几种appender：
   #a),org.apache.log4j.ConsoleAppender（控制台）
   #b),org.apache.log4j.FileAppender（文件）
   #c),org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
   #d),org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件，可通过log4j.appender.R.MaxFileSize=100KB设置文件大小，
   #还可通过log4j.appender.R.MaxBackupIndex=1设置为保存一个备份文件）。
   #e),org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

log4j.appender.stdout=org.apache.log4j.ConsoleAppender



#3、log4j.appender.appenderName.layout指定日志信息的格式（布局）Layout，
#它负责格式化Appender的输出。Log4j提供的layout有以下几种：
    #org.apache.log4j.HTMLLayout（以HTML表格形式布局）
    #org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
    #org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
    #org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）。

log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

#4、log4j.appender.appenderName.layout.ConversionPattern格式化日志信息，
#Log4J采用类似C语言中的printf函数的打印格式格式化日志信息，打印参数如下：
     #%m 输出代码中指定的消息
     #%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
     #%r 输出自应用启动到输出该log信息耗费的毫秒数
     #%c 输出所属的类目，通常就是所在类的全名
     #%t 输出产生该日志事件的线程名
     #%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
     #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，
        #比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2012年06月24日 23：55：28，92
     #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。

log4j.appender.stdout.layout.ConversionPattern=jk %d %p [%c] - %m%n


#此处配置日志文件的生成
#在无其他操作的情况下，log4j.appender.logfile.File的值要配置绝对路径才会生效，如：E:/springmvc.log
#logfile.File的路径是相对于启动目录来说的，比如现在出于tomcat下，则myssm.log文件在tomcat\bin目录下

log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=D:/myssm/myssm.log
log4j.appender.logfile.MaxFileSize=1024KB
log4j.appender.logfile.MaxBackupIndex=3
log4j.appender.logfile.Threshold = DEBUG
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n

###显示SQL语句部分――》发现不开启缓存便会有sql打印出来，此配置不知道是不是必须的？？？
##缓存开启后，查询便通过缓存了，不通过mubatis，所以不打印了
#log4j.logger.com.ibatis=debug
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
#log4j.logger.java.sql.Connection=debug
#log4j.logger.java.sql.Statement=debug
#log4j.logger.java.sql.PreparedStatement=debug,stdout